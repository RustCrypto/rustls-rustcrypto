[package]
name = "rustls-rustcrypto"
description = """
Pure Rust cryptography provider for the Rustls TLS library using algorithm implementations from the
RustCrypto organization
"""
version = "0.0.2-alpha"
authors = ["RustCrypto Developers"]
license = "MIT OR Apache-2.0"
readme = "README.md"
repository = "https://github.com/RustCrypto/rustls-rustcrypto"
categories = ["cryptography", "no-std"]
keywords = ["rustls", "tls"]
edition = "2021"
rust-version = "1.75"
resolver = "1" # Hack to enable the `custom` feature of `getrandom`

# Ensure all dependencies + feats are mapped to crate features for correct usage
# default features often have std breaking no_std and potentially other unwanted
[dependencies]
aead = { version = "0.5.2", default-features = false, optional = true }
aes-gcm = { version = "0.10.3", default-features = false, features = [
    "aes",
], optional = true }
chacha20poly1305 = { version = "0.10.1", default-features = false, optional = true }
crypto-common = { version = "0.1.6", default-features = false }
der = { version = "0.7.9", default-features = false }
digest = { version = "0.10.7", default-features = false }
ecdsa = { version = "0.16.9", default-features = false, optional = true }
ed25519-dalek = { version = "2", default-features = false, optional = true }
hmac = { version = "0.12.1", default-features = false }
p256 = { version = "0.13.2", default-features = false, optional = true }
p384 = { version = "0.13.0", default-features = false, optional = true }
pkcs1 = { version = "0.7.5", default-features = false, optional = true }
pkcs8 = { version = "0.10.2", default-features = false, features = [
    "pkcs5",
], optional = true }
rsa = { version = "0.9.6", default-features = false, features = [
    "sha2",
], optional = true }
sec1 = { version = "0.7.3", default-features = false, optional = true }
sha2 = { version = "0.10.8", default-features = false }
signature = { version = "2.2.0", features = [
    "rand_core",
], default-features = false }
x25519-dalek = { version = "2", default-features = false, optional = true }

paste = { version = "1.0.15", default-features = false }
pki-types = { package = "rustls-pki-types", version = "1.8.0", default-features = false }
rand_core = { version = "0.6.4", default-features = false, features = [
    "getrandom",
] }
rustls = { version = "0.23.13", default-features = false }
webpki = { package = "rustls-webpki", version = "0.102.8", default-features = false }
p521 = { version = "0.13.3", default-features = false, optional = true }


[dev-dependencies]
getrandom = { version = "0.2", features = [
    "custom",
] } # workaround to build on no_std targets

[features]
default = ["std", "tls12", "zeroize", "full"]
full = [
    "aead-full",
    "ecdsa-full",
    "eddsa-full",
    "kx-full",
    "rsa-full",
    "format",
]
format = ["pem", "pkcs1", "pkcs8", "sec1", "der"]
logging = ["rustls/logging"]
tls12 = ["rustls/tls12"]

# Only enable feature in upstream if there is an overall effect e.g. aead/alloc in-place
# zeroize is another typical that can be turned off

# TODO: go through all of these that what gets exposed re: std error type
std = [
    "alloc",
    "webpki/std",
    "pki-types/std",
    "rustls/std",
    "ed25519-dalek?/std",
    "pkcs1?/std",
]
alloc = ["webpki/alloc", "ecdsa?/alloc", "signature/alloc"]
zeroize = ["ed25519-dalek?/zeroize", "x25519-dalek?/zeroize"]

nist = []
p256 = ["dep:p256", "nist"]
p384 = ["dep:p384", "nist"]
p521 = ["dep:p521", "nist"]
ed25519 = ["dep:ed25519-dalek"]

sec1 = ["dep:sec1"]
pem = ["sec1?/pem", "pkcs8?/pem", "p256?/pem", "p384?/pem", "p521?/pem"]

pkcs1 = ["dep:pkcs1"]
pkcs8 = [
    "dep:pkcs8",
    "ed25519-dalek?/pkcs8",
    "sec1?/pkcs8",
    "p256?/pkcs8",
    "p384?/pkcs8",
    "p521?/pkcs8",
]

ecdsa = ["dep:ecdsa"]
ecdsa-p256 = ["p256", "p256/ecdsa", "ecdsa"]
ecdsa-p384 = ["p384", "p384/ecdsa", "ecdsa"]
ecdsa-p521 = ["p521", "p521/ecdsa", "ecdsa"]
ecdsa-full = ["ecdsa-p256", "ecdsa-p384", "ecdsa-p521"]

eddsa = []
eddsa-ed25519 = ["ed25519", "eddsa"]
eddsa-full = ["eddsa-ed25519"]

kx = []
kx-x25519 = ["dep:x25519-dalek", "kx"]
kx-p256 = ["p256", "p256/ecdh", "kx"]
kx-p384 = ["p384", "p384/ecdh", "kx"]
kx-p521 = ["p521", "p521/ecdh", "kx"]
kx-full = ["kx-x25519", "kx-p256", "kx-p384", "kx-p521"]

rsa = ["dep:rsa"]
rsa-pkcs1 = ["rsa", "pkcs1"]
rsa-pss = ["rsa"]
rsa-full = ["rsa-pkcs1", "rsa-pss"]

aead = ["dep:aead"]
aes-gcm = ["dep:aes-gcm", "aead"]
chacha20poly1305 = ["dep:chacha20poly1305", "aead"]
aead-full = ["aes-gcm", "chacha20poly1305"]

der = []
